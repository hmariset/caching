# Default values for squid.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: localhost/konflux-ci/squid
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  fsGroup: 0

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 0

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 3128

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# IMPORTANT: This chart creates and manages its own namespace via templates/namespace.yaml
# DO NOT use `helm install --namespace` or `helm upgrade --namespace` with this chart
# All resources will be deployed to the namespace specified below
namespace:
  name: proxy
  annotations: {}

# Cert-manager and Trust-manager installation control
# Set to true to install cert-manager and trust-manager components
installCertManagerComponents: true

# Cert-manager and Trust-manager configuration
# Based on https://cert-manager.io/docs/installation/helm/
cert-manager:
  enabled: true  # Set to true to enable cert-manager
  namespace: "cert-manager"  # Deploy to dedicated namespace
  installCRDs: false  # Install cert-manager Custom Resource Definitions
  global:
    leaderElection:
      namespace: "cert-manager"  # Namespace for leader election
    podSecurityPolicy:
      enabled: false  # Disable Pod Security Policy
    rbac:
      create: true  # Create RBAC resources
    serviceAccount:
      create: true  # Create service accounts
      name: ""
      annotations: {}
      automountServiceAccountToken: true
  replicaCount: 1  
  image:
    repository: quay.io/jetstack/cert-manager-controller
    tag: v1.18.0
    pullPolicy: IfNotPresent
  webhook:
    replicaCount: 1
    image:
      repository: quay.io/jetstack/cert-manager-webhook
      tag: v1.18.0
      pullPolicy: IfNotPresent
  cainjector:
    enabled: true  # Enable the CA injector component
    replicaCount: 1
    image:
      repository: quay.io/jetstack/cert-manager-cainjector
      tag: v1.18.0
      pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
  nodeSelector: {}
  tolerations: []
  affinity: {}


trust-manager:
  crds:
    enabled: false
    keep: false
  namespace: "cert-manager"


# Issuer configuration
# Creates a self-signed issuer and bundle in the cert-manager namespace
selfsigned-bundle:
  enabled: true  # Set to true to create a self-signed issuer and bundle
